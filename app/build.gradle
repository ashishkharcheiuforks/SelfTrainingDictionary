apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion build_versions.targetSdk
    defaultConfig {
        applicationId "com.san4o.just4fun.selftrainingdictionary"
        minSdkVersion build_versions.minSdk
        targetSdkVersion build_versions.targetSdk
        versionCode build_versions.versionCode
        versionName build_versions.version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"   : "true",
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
//            testCoverageEnabled true
        }
    }

    flavorDimensions("mode")
    productFlavors {
        def DEFAULT_APP_NAME = "МРМ Кассира"

        dev {
            applicationIdSuffix "dev"
            versionName build_versions.version + "-" + applicationIdSuffix
            resValue "string", "app_name", DEFAULT_APP_NAME + " DEV"

            // optimize build settings
//            resConfigs "en", "xxhdpi"
//            ext.enableCrashlytics = false
        }
        orginal {
            applicationIdSuffix "test"
            versionName build_versions.version + "-" + applicationIdSuffix
            resValue "string", "app_name", DEFAULT_APP_NAME + " TEST"
        }
        prod {
            resValue "string", "app_name", DEFAULT_APP_NAME
        }
    }

    applicationVariants.all { variant ->
        def flavors = variant.productFlavors
        variant.outputs.all { output ->
            def appName = 'salespoint'
            def buildType = variant.variantData.variantConfiguration.buildType.name
            if (buildType == 'release') {
                def flavor = flavors[0].properties.get("applicationIdSuffix", null)
                if (flavor != null) {
                    flavor = "_" + flavor
                } else {
                    flavor = ""
                }
                def newName = "${appName}-${defaultConfig.versionName}.${defaultConfig.versionCode}${flavor}_${buildType}"
                outputFileName = newName + ".apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // SM dependencies
//    implementation(group: 'ru.sportmaster.android', name: 'mobile-mvvm-android-sdk', version: deps.mvvm_android_sdk, ext: 'aar')

    // App dependencies
    implementation "androidx.appcompat:appcompat:$deps.appCompat"
    implementation "androidx.fragment:fragment:$deps.fragment"
    implementation "androidx.constraintlayout:constraintlayout:$deps.constraintlayout"
    implementation "androidx.cardview:cardview:$deps.card"
    implementation "androidx.recyclerview:recyclerview:$deps.recyclerView"
    implementation "androidx.annotation:annotation:$deps.androidXAnnotations"
    implementation "androidx.fragment:fragment-ktx:$deps.fragmentKtx"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.legacy:legacy-support-v4:$deps.androidXLegacySupport"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$deps.coroutines"

    // material
    implementation "com.google.android.material:material:$deps.material"

    // Koin
//    implementation "org.koin:koin-core:$deps.koin"
//    implementation "org.koin:koin-android:$deps.koin"
//    implementation "org.koin:koin-android-viewmodel:$deps.koin"
//    implementation 'androidx.preference:preference:1.1.0'
//    testImplementation "org.koin:koin-test:$deps.koin"
//    // dagger
    implementation "com.google.dagger:dagger:$deps.dagger"
    kapt "com.google.dagger:dagger-compiler:$deps.dagger"
    implementation "com.google.dagger:dagger-android:$deps.dagger"
    implementation "com.google.dagger:dagger-android-support:$deps.dagger"
    kapt("com.google.dagger:dagger-android-processor:$deps.dagger") {
        exclude group: 'com.android.support'
    }
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$versions.dagger"
//    kaptAndroidTest("com.google.dagger:dagger-android-processor:$versions.dagger") {
//        exclude group: 'com.android.support'
//    }

    // ROOM
    implementation "androidx.room:room-runtime:$deps.room"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$deps.room"
    implementation "androidx.room:room-ktx:$deps.room"

    // Logging
    implementation "com.jakewharton.timber:timber:$deps.timber"
    implementation "log4j:log4j:1.2.17"

    implementation "androidx.test.espresso:espresso-idling-resource:$deps.espresso"


    // Lifecycle + liveData + viewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$deps.archLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$deps.archLifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$deps.archLifecycle"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.1.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.1.0"

    // Glide
//    implementation 'com.github.bumptech.glide:glide:4.9.0'
//    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // ZXing
//    implementation 'com.journeyapps:zxing-android-embedded:4.0.2'
//    implementation 'com.google.zxing:core:3.4.0'
//    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
//    implementation 'com.google.zxing:core:3.3.0'

    // Firebase Analytics & Crashlytics
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation "commons-io:commons-io:2.6"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$deps.junit"
    testImplementation "org.robolectric:robolectric:$deps.robolectric"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$deps.mockito_kotlin"
    testImplementation "io.mockk:mockk:1.9.3"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'

}
